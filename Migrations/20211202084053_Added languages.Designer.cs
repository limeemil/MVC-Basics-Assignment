// <auto-generated />
using MVC_Basics__Assignment.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVC_Basics__Assignment.Migrations
{
    [DbContext(typeof(PeopleDatabaseContext))]
    [Migration("20211202084053_Added languages")]
    partial class Addedlanguages
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVC_Basics__Assignment.ViewModels.CityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryModelId")
                        .HasColumnName("Country")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CountryModelId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryModelId = 1,
                            Name = "Borås"
                        },
                        new
                        {
                            Id = 2,
                            CountryModelId = 1,
                            Name = "Göteborg"
                        },
                        new
                        {
                            Id = 3,
                            CountryModelId = 1,
                            Name = "Stockholm"
                        },
                        new
                        {
                            Id = 4,
                            CountryModelId = 2,
                            Name = "Oslo"
                        });
                });

            modelBuilder.Entity("MVC_Basics__Assignment.ViewModels.CountryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sverige"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Norge"
                        });
                });

            modelBuilder.Entity("MVC_Basics__Assignment.ViewModels.DBPersonModel", b =>
                {
                    b.Property<string>("SSN")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("First name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("Last name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnName("Phonenumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("SSN");

                    b.HasIndex("CityId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            SSN = "0123456789",
                            CityId = 1,
                            FirstName = "Andreas",
                            LastName = "Lönnermark",
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            SSN = "9876543210",
                            CityId = 4,
                            FirstName = "Martin",
                            LastName = "Nielsen",
                            PhoneNumber = "1111111111"
                        });
                });

            modelBuilder.Entity("MVC_Basics__Assignment.ViewModels.LanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Svenska"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Norsk"
                        },
                        new
                        {
                            Id = 3,
                            Name = "English"
                        });
                });

            modelBuilder.Entity("MVC_Basics__Assignment.ViewModels.PersonLanguageModel", b =>
                {
                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("PersonSSN")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("LanguageId", "PersonSSN");

                    b.HasIndex("PersonSSN");

                    b.ToTable("PersonLanguages");

                    b.HasData(
                        new
                        {
                            LanguageId = 1,
                            PersonSSN = "0123456789"
                        },
                        new
                        {
                            LanguageId = 3,
                            PersonSSN = "0123456789"
                        },
                        new
                        {
                            LanguageId = 2,
                            PersonSSN = "9876543210"
                        },
                        new
                        {
                            LanguageId = 3,
                            PersonSSN = "9876543210"
                        });
                });

            modelBuilder.Entity("MVC_Basics__Assignment.ViewModels.CityModel", b =>
                {
                    b.HasOne("MVC_Basics__Assignment.ViewModels.CountryModel", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_Basics__Assignment.ViewModels.DBPersonModel", b =>
                {
                    b.HasOne("MVC_Basics__Assignment.ViewModels.CityModel", "City")
                        .WithMany("People")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_Basics__Assignment.ViewModels.PersonLanguageModel", b =>
                {
                    b.HasOne("MVC_Basics__Assignment.ViewModels.LanguageModel", "Language")
                        .WithMany("PersonLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Basics__Assignment.ViewModels.DBPersonModel", "Person")
                        .WithMany("PersonLanguages")
                        .HasForeignKey("PersonSSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
